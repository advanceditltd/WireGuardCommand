@page "/ProjectView"
@using System.Runtime.InteropServices

@{
    var project = Cache.CurrentProject;
}

<div class="container">
    @if(project is not null && 
        project.Metadata is not null &&
        project.ProjectData is not null)
    {
        @if (!string.IsNullOrWhiteSpace(Error))
        {
            <div class="project-view-error">
                <span style="flex: 1;">@Error</span>
                <span style="cursor: pointer; font-size: 1.25rem" @onclick="() => { Status = string.Empty; }">⨯</span>
            </div>
        }
        else if(!string.IsNullOrWhiteSpace(Status))
        {
            <div class="project-view-status">
                <span style="flex: 1;">@Status</span>
                <span style="cursor: pointer; font-size: 1.25rem" @onclick="() => { Status = string.Empty; }">⨯</span>
            </div>
        }

        <div class="project-view-header">
            <div style="display: flex; flex-direction: column">
                <div style="font-weight: bold; font-size: 1.25rem">@project.Metadata.Name</div>

                @if(HasUnsavedChanges)
                {
                    <div style="font-size: 0.75rem">Unsaved Changes</div>
                }
            </div>
            <button class="btn-primary" disabled="@(!HasUnsavedChanges)" @onclick="SaveChangesAsync">Save</button>
            <div style="flex: 1"></div>

            @if (RuntimeInformation.IsOSPlatform(OSPlatform.Windows))
            {
                <button class="btn-primary" @onclick="BrowseProject">Open Folder</button>
            }

            <button class="btn-unsafe" @onclick="GoBack">Close Project</button>
        </div>

        <div class="project-view-body">
            <div style="display: flex; flex-direction: column">
                <label>Seed</label>
                <div style="display: flex; gap: 0.5rem">
                    <input @bind="project.ProjectData.Seed"/>
                    <button @onclick="GenerateSeed" class="btn-primary">Generate</button>
                </div>
            </div>

            <div style="display: flex; flex-direction: column">
                <label>No. of Clients</label>
                <div style="display: flex; gap: 0.5rem">
                    <input @bind="project.ProjectData.NumberOfClients" />
                </div>
            </div>

            <div style="display: flex; flex-direction: column">
                <label>Subnet</label>
                <div style="display: flex; gap: 0.5rem">
                    <input @bind="project.ProjectData.Subnet" />
                </div>
            </div>

            <div style="display: flex; flex-direction: column">
                <label>DNS (Optional)</label>
                <div style="display: flex; gap: 0.5rem">
                    <input @bind="project.ProjectData.DNS" />
                </div>
            </div>

            <div style="display: flex; flex-direction: column">
                <label>Allowed IPs</label>
                <div style="display: flex; gap: 0.5rem">
                    <input @bind="project.ProjectData.AllowedIPs" />
                </div>
            </div>

            <div style="display: flex; flex-direction: column">
                <label>Endpoint</label>
                <div style="display: flex; gap: 0.5rem">
                    <input @bind="project.ProjectData.Endpoint" />
                </div>
            </div>

            <div style="display: flex; flex-direction: column">
                <label>Use Preshared Keys</label>
                <div style="display: flex; gap: 0.5rem">
                    <input type="checkbox" @bind="project.ProjectData.UsePresharedKeys" />
                </div>
            </div>

            <div style="display: flex; flex-direction: column">
                <label>Listen Port</label>
                <div style="display: flex; gap: 0.5rem">
                    <input @bind="project.ProjectData.ListenPort" />
                </div>
            </div>
            <button class="btn-primary" @onclick="GenerateConfigs">Generate</button>
        </div>
    }
    else
    {
        <div style="display: flex; align-items: center;">
            <button class="btn-primary" @onclick="GoBack">Back</button>
        </div>
        <div>Project failed to load.</div>
    }
</div>
