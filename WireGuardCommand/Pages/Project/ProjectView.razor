@page "/ProjectView"

@using System.Runtime.InteropServices

@using Microsoft.AspNetCore.Components.Sections
@using WireGuardCommand.Components;
@using WireGuardCommand.Extensions

@{
    var project = Cache.CurrentProject;
}

<div class="container">
    @if(project is not null && 
        project.Metadata is not null &&
        project.ProjectData is not null)
    {
        <Alert />

        <Dialog @ref="Dialog"/>

        <Toolbar>
            <div style="display: flex; flex-direction: column; padding: 0.5rem">
                <div style="font-weight: bold; font-size: 1rem">@project.Metadata.Name</div>

                @if (HasUnsavedChanges)
                {
                    <div style="font-size: 0.75rem">Unsaved Changes</div>
                }
            </div>

            <ToolbarDivider></ToolbarDivider>

            <ToolbarMenu Title="File">
                @if (RuntimeInformation.IsOSPlatform(OSPlatform.Windows))
                {
                    <ToolbarMenuItem Title="Open Folder" OnClick="BrowseProject"></ToolbarMenuItem>
                    <ToolbarMenuDivider></ToolbarMenuDivider>
                }

                <ToolbarMenuItem Title="Save as Template" OnClick="SaveAsTemplateAsync"></ToolbarMenuItem>
                <ToolbarMenuItem Title="Save Project" OnClick="SaveChangesAsync"></ToolbarMenuItem>
                <ToolbarMenuDivider></ToolbarMenuDivider>
                <ToolbarMenuItem Title="Close Project" OnClick="CloseProject"></ToolbarMenuItem>
            </ToolbarMenu>
        </Toolbar>

        <div class="project-view-body">
            <TabMenu>
                <TabPage Title="Configuration" Default="true">
                    <fieldset class="field-group row">
                        <legend>General</legend>
                        <div class="field">
                            <div style="display: flex; flex-direction: row; gap: 0.25rem; align-items: center">
                                <label>No. of Clients</label>
                                <Tooltip Title="Number of Clients"
                                         Content="Sets the number of generated client peers. <br/><br/>Limited by the transit subnet, but can be manually extended later if within transit subnet limits." />
                            </div>
                            <div style="display: flex; gap: 0.5rem">
                                <input @bind="project.ProjectData.NumberOfClients" />
                            </div>
                        </div>

                        <div class="field">
                            <div style="display: flex; gap: 0.25rem; align-items: center">
                                <label>Transit Subnet</label>
                                <Tooltip Title="Transit Subnet"
                                         Content="Sets the transit network that exists between the clients local subnet and the hosts internal set of subnets.<br/><br/>This avoids conflicts and allows easier filtering. It's also what limits the amount of client peers.<br/><br/><b>Example</b><br/>10.0.0.0/24" />
                            </div>

                            <div style="display: flex; gap: 0.5rem">
                                <input @bind="project.ProjectData.Subnet" />
                            </div>
                        </div>

                        <div class="field">
                            <div style="display: flex; gap: 0.25rem; align-items: center">
                                <label>DNS (Optional)</label>
                                <Tooltip Title="DNS"
                                         Content="Allows client side remote subnet name resolution when you have a DNS server on the hosting subnet, often used when on-premise DNS exists.<br/><br/>A DNS suffix can also be added here allowing client name resolution without FQDN usage in a domain environment.<br/><br/><b>Example</b><br/>10.0.0.10<br/>domain.local" />
                            </div>

                            <div style="display: flex; gap: 0.5rem">
                                <input @bind="project.ProjectData.DNS" />
                            </div>
                        </div>

                        <div class="field">
                            <div style="display: flex; gap: 0.25rem; align-items: center">
                                <label>Allowed IPs</label>
                                <Tooltip Title="Allowed IPs"
                                         Content="Sets the subnets that the client will attempt routing to through an established WireGuard tunnel.<br/><br/>When 0.0.0.0/0 is specified, all traffic will route through the tunnel." />
                            </div>

                            <div style="display: flex; gap: 0.5rem">
                                <input @bind="project.ProjectData.AllowedIPs" />
                            </div>
                        </div>

                        <div class="field">
                            <div style="display: flex; gap: 0.25rem; align-items: center">
                                <label>Endpoint</label>
                                <Tooltip Title="Endpoint"
                                         Content="The endpoint is not mandatory.<br/><br/>However, it enforces the client to connect to the hosting endpoint and not to the endpoint that the public key routes to.<br/><br/><b>Example</b><br/>remote.endpoint.net:51820" />
                            </div>

                            <div style="display: flex; gap: 0.5rem">
                                <input @bind="project.ProjectData.Endpoint" />
                            </div>
                        </div>

                        <div class="field">
                            <div style="display: flex; gap: 0.25rem; align-items: center">
                                <label>Interface Name</label>
                                <Tooltip Title="Interface Name"
                                         Content="Sets the name of the interface that will be created by WireGuard on both the server and client once configuration is imported." />
                            </div>

                            <div style="display: flex; gap: 0.5rem">
                                <input @bind="project.ProjectData.Interface" />
                            </div>
                        </div>

                        <div class="field">
                            <div style="display: flex; flex-direction: row; gap: 0.25rem; align-items: center">
                                <label>Listen Port</label>
                                <Tooltip Title="Listen Port"
                                         Content="Sets the WireGuard interface UDP listen port for the server and peers.<br /><br />It must be unique in the case of other existing interfaces." />
                            </div>
                            <div style="display: flex; gap: 0.5rem">
                                <input @bind="project.ProjectData.ListenPort" />
                            </div>
                        </div>

                        <div class="field horizontal">
                            <div style="display: flex; gap: 0.5rem">
                                <input type="checkbox" @bind="project.ProjectData.UsePresharedKeys" />
                            </div>
                            <div style="display: flex; gap: 0.25rem; align-items: center">
                                <label>Use Preshared Keys</label>
                                <Tooltip Title="Preshared Keys"
                                         Content="Adds another layer of security where the peers have to not only match their keypairs, but also have to pass a pre-shared key check." />
                            </div>
                        </div>

                        <div class="field horizontal">
                            <div style="display: flex; gap: 0.5rem">
                                <input type="checkbox" @bind="project.ProjectData.UseLastAddress" />
                            </div>
                            <div style="display: flex; gap: 0.25rem; align-items: center">
                                <label>Use Last Address</label>
                                <Tooltip Title="Last Address"
                                         Content="Assigns the last IP in the subnet to the server.<br/><br/>This is useful where you want to match the client IP to their id." />
                            </div>
                        </div>
                    </fieldset>

                    <fieldset class="field-group column">
                        <legend>Commands</legend>
                        <div class="field">
                            <div style="display: flex; flex-direction: row; gap: 0.25rem; align-items: center">
                                <label>Post Up</label>
                                <Tooltip Title="Post Up"
                                         Content="The commands to be executed when the servers WireGuard interface is brought online.<br/><br/>Add a newline between each new command.<br/><br/><b>Example</b><br/>iptables -A FORWARD -i %i -j ACCEPT" />
                            </div>
                            <div style="display: flex; gap: 0.5rem">
                                <textarea style="flex: 1" rows="4" @bind="project.ProjectData.PostUp" />
                            </div>
                        </div>

                        <div class="field">
                            <div style="display: flex; flex-direction: row; gap: 0.25rem; align-items: center">
                                <label>Post Down</label>
                                <Tooltip Title="Post Down"
                                         Content="The commands to be executed when the servers WireGuard interface is brought offline.<br/><br/>Add a newline between each new command.<br/><br/><b>Example</b><br/>iptables -D FORWARD -i %i -j ACCEPT" />
                            </div>
                            <div style="display: flex; gap: 0.5rem">
                                <textarea style="flex: 1" rows="4" @bind="project.ProjectData.PostDown" />
                            </div>
                        </div>
                    </fieldset>

                    <fieldset class="field-group column">
                        <legend style="display: flex; gap: 0.5rem; align-items: center">
                            <span>Evaluator</span>
                            <Tooltip Title="Evaluator"
                                     Content="The evaluator takes your input and replaces any variables before outputting to a file.<br/><br/>This is useful if you need to generate commands for another system for the server or each peer." />
                            <button class="btn-primary" @onclick="ShowVariables">Variables</button>
                        </legend>

                        <div class="field">
                            <div style="display: flex; flex-direction: row; gap: 0.25rem; align-items: center">
                                <label>File Name</label>
                                <Tooltip Title="File Name"
                                         Content="The name of the output file." />
                            </div>
                            <div style="display: flex; gap: 0.5rem">
                                <input style="flex: 1" rows="4" @bind="project.ProjectData.CommandFileName"></input>
                            </div>
                        </div>

                        <div class="field">
                            <div style="display: flex; flex-direction: row; gap: 0.25rem; align-items: center">
                                <label>Once</label>
                                <Tooltip Title="Once"
                                         Content="This field is evaluated once. Variables are supported.<br/><br/><b>Example</b><br/>The server is listening on: {server.address}:{server.port} with interface {interface.name}" />
                            </div>
                            <div style="display: flex; gap: 0.5rem">
                                <textarea style="flex: 1" rows="4" @bind="project.ProjectData.CommandOnce"></textarea>
                            </div>
                        </div>

                        <div class="field">
                            <div style="display: flex; flex-direction: row; gap: 0.25rem; align-items: center">
                                <label>Per Peer</label>
                                <Tooltip Title="Per Peer"
                                         Content="This field is evaluated once for every peer. Variables are supported.<br/><br/><b>Example</b><br/>Peer {peer.id} is listening on {peer.address}:{peer.port} with interface {interface.name}" />
                            </div>
                            <div style="display: flex; gap: 0.5rem">
                                <textarea style="flex: 1" rows="4" @bind="project.ProjectData.CommandPerPeer"></textarea>
                            </div>
                        </div>
                    </fieldset>
                </TabPage>

                <TabPage Title="Preview" OnPageLoad="GeneratePreviewAsync">
                    @if (LoadingPreview)
                    {
                        <div style="display: flex; gap: 0.5rem; align-items: center; justify-content: center">
                            <span>Generating..</span>
                            <img src="/images/spinner.gif" style="filter: drop-shadow(0 0 5px dodgerblue);" width="40" height="40" />
                        </div>
                    }
                    <div style="display: @(LoadingPreview ? "none" : "flex"); flex-direction: column; gap: 1rem">
                        @if (!string.IsNullOrWhiteSpace(PreviewCode))
                        {
                            <div style="display: flex; gap: 0.5rem">
                                <div style="flex: 1; display: flex; flex-direction: column;">
                                    <CodeHighlighter Title="Commands" Code="@PreviewCode" Language="language-ini" FileName="@project.ProjectData.CommandFileName" />
                                </div>
                            </div>
                        }

                        @foreach (var config in PreviewConfigs)
                        {
                            <div style="display: flex; gap: 0.5rem">
                                <div style="flex: 1; display: flex; flex-direction: column;">
                                    <CodeHighlighter Title="@config.Key" Code="@config.Value" Language="language-ini" FileName="wg.conf" />
                                </div>
                            </div>
                        }
                    </div>
                </TabPage>

                <TabPage Title="Output">
                    <fieldset class="field-group">
                        <legend>General</legend>
                        <div class="field">
                            <label>Seed</label>
                            <div style="display: flex; gap: 0.5rem">
                                <input @bind="project.ProjectData.Seed" style="flex: 1" />
                                <button @onclick="RegenerateSeed" class="btn-primary">Regenerate</button>
                            </div>
                        </div>
                    </fieldset>

                    <fieldset class="field-group column">
                        <legend>Output</legend>
                        <div class="field horizontal">
                            <div style="display: flex; gap: 0.5rem">
                                <input type="checkbox" @bind="project.ProjectData.IsZippedOutput" />
                            </div>
                            <div style="display: flex; gap: 0.25rem; align-items: center">
                                <label>Export to Zip</label>
                            </div>
                        </div>

                        @if (project.ProjectData.IsZippedOutput)
                        {
                            <div class="field">
                                <div style="display: flex; flex-direction: row; gap: 0.25rem; align-items: center">
                                    <label>Zip Passphrase</label>
                                    <Tooltip Title="Zip Passphrase"
                                             Content="The passphrase to protect the output zip file with." />
                                </div>
                                <div style="display: flex; gap: 0.5rem">
                                    <input @bind="project.ProjectData.ZipPassphrase" style="flex: 1" />
                                </div>
                            </div>
                        }
                    </fieldset>

                    <button class="btn-primary" @onclick="GenerateConfigsAsync">Export</button>
                </TabPage>
            </TabMenu>
        </div>
    }
    else
    {
        <div style="display: flex; align-items: center;">
            <button class="btn-primary" @onclick="CloseProject">Back</button>
        </div>
        <div>Project failed to load.</div>
    }
</div>
